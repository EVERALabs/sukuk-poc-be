// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.sukuk-poc.com/support",
            "email": "support@sukuk-poc.com"
        },
        "license": {
            "name": "MIT",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/system/force-sync": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Manually trigger blockchain event synchronization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Force blockchain sync",
                "responses": {
                    "200": {
                        "description": "Sync triggered",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/system/sync-status": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get the current blockchain synchronization status and last processed event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get blockchain sync status",
                "responses": {
                    "200": {
                        "description": "Sync status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/debug/indexer": {
            "get": {
                "description": "Test connection to indexer database and query sample data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Debug"
                ],
                "summary": "Debug indexer connection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sukuk address to test",
                        "name": "address",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Debug information",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/debug/indexer-tables": {
            "get": {
                "description": "Get all discovered hash-prefixed indexer tables with metadata and row counts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "debug"
                ],
                "summary": "List indexer tables",
                "responses": {
                    "200": {
                        "description": "Discovered indexer tables",
                        "schema": {
                            "$ref": "#/definitions/models.IndexerTablesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/debug/indexer-tables/prefix/{hash_prefix}": {
            "get": {
                "description": "Get all tables that share the same hash prefix (deployment)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "debug"
                ],
                "summary": "Get tables by hash prefix",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"f243\"",
                        "description": "Hash prefix",
                        "name": "hash_prefix",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tables with hash prefix",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid hash prefix",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/debug/indexer-tables/validate": {
            "get": {
                "description": "Validate that all discovered indexer tables have expected columns",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "debug"
                ],
                "summary": "Validate indexer tables",
                "responses": {
                    "200": {
                        "description": "Validation results",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/debug/indexer-tables/{table_name}": {
            "get": {
                "description": "Get detailed information about a specific indexer table including column structure",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "debug"
                ],
                "summary": "Get table details",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"f243__sukuk_purchase\"",
                        "description": "Table name",
                        "name": "table_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Table details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid table name",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Table not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Get overall system health including database and sync status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Get system health",
                "responses": {
                    "200": {
                        "description": "System health",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/owned-sukuk/{address}": {
            "get": {
                "description": "Get sukuk metadata for sukuk tokens owned by a specific wallet address. Only returns sukuk with metadata_ready=true by default.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "owned-sukuk"
                ],
                "summary": "Get sukuk owned by address",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"0xf57093Ea18E5CfF6E7bB3bb770Ae9C492277A5a9\"",
                        "description": "User wallet address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Owned sukuk metadata",
                        "schema": {
                            "$ref": "#/definitions/handlers.OwnedSukukResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid address",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/portfolio/{address}": {
            "get": {
                "description": "Get complete portfolio showing all sukuk holdings with current balances and claimable yields",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "portfolio"
                ],
                "summary": "Get user portfolio",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"0xf57093Ea18E5CfF6E7bB3bb770Ae9C492277A5a9\"",
                        "description": "User wallet address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User portfolio with holdings",
                        "schema": {
                            "$ref": "#/definitions/models.PortfolioResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid address",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/redemptions": {
            "get": {
                "description": "Get all redemption requests with their approval status, supports pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "redemptions"
                ],
                "summary": "Get all redemptions",
                "parameters": [
                    {
                        "maximum": 200,
                        "minimum": 1,
                        "type": "integer",
                        "default": 50,
                        "description": "Number of redemptions to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "Number of redemptions to skip",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "requested",
                            "approved",
                            "rejected",
                            "completed"
                        ],
                        "type": "string",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of redemptions with status",
                        "schema": {
                            "$ref": "#/definitions/models.RedemptionListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/redemptions/stats": {
            "get": {
                "description": "Get comprehensive statistics about all redemptions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "redemptions"
                ],
                "summary": "Get redemption statistics",
                "responses": {
                    "200": {
                        "description": "Redemption statistics",
                        "schema": {
                            "$ref": "#/definitions/models.RedemptionStatsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/redemptions/sukuk/{sukuk_address}": {
            "get": {
                "description": "Get all redemption requests and approvals for a specific sukuk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "redemptions"
                ],
                "summary": "Get sukuk redemptions",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"0x02ba44871BD555d6ebD541e2820796F9b88cBF75\"",
                        "description": "Sukuk contract address",
                        "name": "sukuk_address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sukuk's redemptions",
                        "schema": {
                            "$ref": "#/definitions/models.RedemptionListResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid sukuk address",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/redemptions/user/{address}": {
            "get": {
                "description": "Get all redemption requests and approvals for a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "redemptions"
                ],
                "summary": "Get user redemptions",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"0xf57093Ea18E5CfF6E7bB3bb770Ae9C492277A5a9\"",
                        "description": "User wallet address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User's redemptions",
                        "schema": {
                            "$ref": "#/definitions/models.RedemptionListResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid address",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/redemptions/{request_id}": {
            "get": {
                "description": "Get detailed information about a specific redemption request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "redemptions"
                ],
                "summary": "Get redemption by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Redemption request ID",
                        "name": "request_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Redemption details",
                        "schema": {
                            "$ref": "#/definitions/models.RedemptionRequest"
                        }
                    },
                    "400": {
                        "description": "Invalid request ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Redemption not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/snapshots": {
            "get": {
                "description": "Get balance snapshots for all sukuk tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "snapshots"
                ],
                "summary": "Get all snapshots",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Number of snapshots to return (default: 50, max: 200)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All snapshots",
                        "schema": {
                            "$ref": "#/definitions/handlers.AllSnapshotsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/sukuk-metadata": {
            "get": {
                "description": "Get all sukuk metadata with optional filtering by ready status and latest 10 blockchain activities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sukuk-metadata"
                ],
                "summary": "List sukuk metadata with activities",
                "parameters": [
                    {
                        "enum": [
                            "true",
                            "false"
                        ],
                        "type": "string",
                        "example": "true",
                        "description": "Filter by metadata_ready status",
                        "name": "ready",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of sukuk metadata with activities",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SukukMetadataListResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create new sukuk with onchain and offchain metadata",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sukuk-metadata"
                ],
                "summary": "Create sukuk metadata",
                "parameters": [
                    {
                        "description": "Sukuk metadata",
                        "name": "sukuk",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SukukMetadataCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.SukukMetadataResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/sukuk-metadata/sync": {
            "post": {
                "description": "Manually sync metadata for a specific sukuk from indexer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sukuk-metadata"
                ],
                "summary": "Trigger sukuk metadata sync",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Token ID",
                        "name": "tokenId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Contract Address",
                        "name": "contractAddress",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/sukuk-metadata/tables": {
            "get": {
                "description": "Get all available sukuk creation tables from the indexer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sukuk-metadata"
                ],
                "summary": "List sukuk creation tables",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/sukuk-metadata/{id}": {
            "get": {
                "description": "Get a single sukuk metadata by ID with latest 10 blockchain activities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sukuk-metadata"
                ],
                "summary": "Get sukuk metadata by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Sukuk metadata ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sukuk metadata with activities",
                        "schema": {
                            "$ref": "#/definitions/models.SukukMetadataListResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Sukuk metadata not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update existing sukuk metadata with offchain business information like tenor, imbal hasil, kuota nasional, etc. All fields are optional for partial updates. Onchain data (contract address, transaction hash, etc.) is preserved.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sukuk-metadata"
                ],
                "summary": "Update sukuk metadata with offchain business data",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 36,
                        "description": "Sukuk metadata ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Offchain metadata to update",
                        "name": "sukuk",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SukukMetadataUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated sukuk metadata with both onchain and offchain data",
                        "schema": {
                            "$ref": "#/definitions/models.SukukMetadataResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload or ID format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Sukuk metadata not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to update sukuk metadata",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/sukuk-metadata/{id}/ready": {
            "put": {
                "description": "Mark sukuk metadata as ready for public display. Only sukuk with metadata_ready=true will appear in filtered API responses. Use this after adding all required offchain metadata.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sukuk-metadata"
                ],
                "summary": "Mark sukuk metadata as ready",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 36,
                        "description": "Sukuk metadata ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sukuk metadata marked as ready",
                        "schema": {
                            "$ref": "#/definitions/models.SukukMetadataResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Sukuk metadata not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to update sukuk metadata",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/sukuk-metadata/{id}/unready": {
            "put": {
                "description": "Mark sukuk metadata as unready (metadata_ready=false). This removes it from public API responses filtered by ready=true. Useful for taking sukuk offline for maintenance or updates.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sukuk-metadata"
                ],
                "summary": "Mark sukuk metadata as unready",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 36,
                        "description": "Sukuk metadata ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sukuk metadata marked as unready",
                        "schema": {
                            "$ref": "#/definitions/models.SukukMetadataResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Sukuk metadata not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to update sukuk metadata",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/sukuk/{sukukAddress}/snapshots": {
            "get": {
                "description": "Get balance snapshots for a sukuk token used for yield distribution calculations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "snapshots"
                ],
                "summary": "Get sukuk snapshots",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"0x71D7C963E607eeDAfAA7Ef8f8c92bBb878090650\"",
                        "description": "Sukuk contract address",
                        "name": "sukukAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Number of snapshots to return (default: 10, max: 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by specific snapshot ID",
                        "name": "snapshot_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sukuk snapshots",
                        "schema": {
                            "$ref": "#/definitions/handlers.SnapshotsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Sukuk not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/transaction-history/{address}": {
            "get": {
                "description": "Get all blockchain activities (purchases and redemptions) for a specific user address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction-history"
                ],
                "summary": "Get transaction history by address",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"0xf57093Ea18E5CfF6E7bB3bb770Ae9C492277A5a9\"",
                        "description": "User wallet address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 50,
                        "example": 20,
                        "description": "Number of activities to retrieve",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction history",
                        "schema": {
                            "$ref": "#/definitions/handlers.RiwayatResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid address or limit",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/transactions/{address}": {
            "get": {
                "description": "Get complete transaction history including purchases, redemptions, and yield claims",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get transaction history",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"0xf57093Ea18E5CfF6E7bB3bb770Ae9C492277A5a9\"",
                        "description": "User wallet address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maximum": 200,
                        "minimum": 1,
                        "type": "integer",
                        "default": 50,
                        "description": "Number of transactions to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction history",
                        "schema": {
                            "$ref": "#/definitions/models.TransactionHistoryResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid address or parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/yield-claims/{address}": {
            "get": {
                "description": "Get all available yield claims across user's sukuk holdings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "portfolio"
                ],
                "summary": "Get available yield claims",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"0xf57093Ea18E5CfF6E7bB3bb770Ae9C492277A5a9\"",
                        "description": "User wallet address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Available yield claims",
                        "schema": {
                            "$ref": "#/definitions/models.YieldClaimsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid address",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/yield-distributions/{sukuk_address}": {
            "get": {
                "description": "Get yield distribution history for a specific sukuk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "portfolio"
                ],
                "summary": "Get yield distributions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sukuk contract address",
                        "name": "sukuk_address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Number of distributions to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Yield distributions",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.AllSnapshotsResponse": {
            "type": "object",
            "properties": {
                "snapshots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SnapshotEvent"
                    }
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "handlers.OwnedSukukResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "sukuk": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SukukMetadataListResponse"
                    }
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "handlers.RiwayatResponse": {
            "type": "object",
            "properties": {
                "activities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ActivityEvent"
                    }
                },
                "address": {
                    "type": "string"
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "handlers.SnapshotsResponse": {
            "type": "object",
            "properties": {
                "snapshots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SnapshotEvent"
                    }
                },
                "sukuk_address": {
                    "type": "string"
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "models.ActivityEvent": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "Buyer or User address",
                    "type": "string"
                },
                "amount": {
                    "description": "Token amount",
                    "type": "string"
                },
                "sukuk_address": {
                    "description": "Sukuk contract address",
                    "type": "string"
                },
                "sukuk_code": {
                    "description": "Sukuk symbol/code (e.g., \"SITI\")",
                    "type": "string"
                },
                "sukuk_title": {
                    "description": "Sukuk name/title",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Event timestamp",
                    "type": "string"
                },
                "tx_hash": {
                    "description": "Transaction hash",
                    "type": "string"
                },
                "type": {
                    "description": "\"purchase\" or \"redemption_request\"",
                    "type": "string"
                }
            }
        },
        "models.IndexerTableInfo": {
            "type": "object",
            "properties": {
                "event_type": {
                    "type": "string"
                },
                "hash_prefix": {
                    "type": "string"
                },
                "last_updated": {
                    "type": "string"
                },
                "row_count": {
                    "type": "integer"
                },
                "table_name": {
                    "type": "string"
                }
            }
        },
        "models.IndexerTablesResponse": {
            "type": "object",
            "properties": {
                "available_events": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "latest_tables": {
                    "description": "event_type -\u003e table_name mapping",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.IndexerTableInfo"
                    }
                },
                "total_tables": {
                    "type": "integer"
                }
            }
        },
        "models.PortfolioResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "holdings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SukukHolding"
                    }
                },
                "summary": {
                    "$ref": "#/definitions/models.PortfolioSummary"
                },
                "total_holdings": {
                    "type": "integer"
                },
                "total_value": {
                    "description": "Total portfolio value in USD/base currency",
                    "type": "string"
                }
            }
        },
        "models.PortfolioSummary": {
            "type": "object",
            "properties": {
                "active_sukuk_count": {
                    "description": "Sukuk with non-zero balance",
                    "type": "integer"
                },
                "matured_sukuk_count": {
                    "description": "Sukuk that have matured",
                    "type": "integer"
                },
                "total_claimable_yield": {
                    "type": "string"
                },
                "total_sukuk_count": {
                    "type": "integer"
                },
                "total_yield_claimed": {
                    "type": "string"
                }
            }
        },
        "models.RedemptionListResponse": {
            "type": "object",
            "properties": {
                "redemptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.RedemptionRequest"
                    }
                },
                "status_counts": {
                    "description": "requested: 5, approved: 2, etc.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "models.RedemptionRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "approval_block": {
                    "type": "integer"
                },
                "approval_id": {
                    "type": "string"
                },
                "approval_time": {
                    "type": "string"
                },
                "approval_tx_hash": {
                    "type": "string"
                },
                "approved_amount": {
                    "type": "string"
                },
                "can_approve": {
                    "type": "boolean"
                },
                "metadata": {
                    "description": "Metadata for UI/Business Logic",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.SukukMetadata"
                        }
                    ]
                },
                "payment_token": {
                    "type": "string"
                },
                "request_block": {
                    "type": "integer"
                },
                "request_id": {
                    "description": "Request Information",
                    "type": "string"
                },
                "request_time": {
                    "type": "string"
                },
                "request_tx_hash": {
                    "type": "string"
                },
                "requires_manager_auth": {
                    "type": "boolean"
                },
                "status": {
                    "description": "Status and Approval Information",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.RedemptionStatus"
                        }
                    ]
                },
                "sukuk_address": {
                    "type": "string"
                },
                "total_supply": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "models.RedemptionStatsResponse": {
            "type": "object",
            "properties": {
                "approved_requests": {
                    "type": "integer"
                },
                "by_sukuk": {
                    "description": "By Sukuk breakdown",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/models.RedemptionSukukStats"
                    }
                },
                "pending_requests": {
                    "type": "integer"
                },
                "total_approved_amount": {
                    "type": "string"
                },
                "total_requested_amount": {
                    "type": "string"
                },
                "total_requests": {
                    "type": "integer"
                }
            }
        },
        "models.RedemptionStatus": {
            "type": "string",
            "enum": [
                "requested",
                "approved",
                "rejected",
                "completed"
            ],
            "x-enum-varnames": [
                "RedemptionStatusRequested",
                "RedemptionStatusApproved",
                "RedemptionStatusRejected",
                "RedemptionStatusCompleted"
            ]
        },
        "models.RedemptionSukukStats": {
            "type": "object",
            "properties": {
                "approved_amount": {
                    "type": "string"
                },
                "request_count": {
                    "type": "integer"
                },
                "requested_amount": {
                    "type": "string"
                },
                "sukuk_address": {
                    "type": "string"
                },
                "sukuk_code": {
                    "type": "string"
                }
            }
        },
        "models.SnapshotEvent": {
            "type": "object",
            "properties": {
                "block_number": {
                    "type": "integer"
                },
                "eligible_count": {
                    "type": "integer"
                },
                "holder_count": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "snapshot_id": {
                    "type": "string"
                },
                "sukuk_address": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "total_supply": {
                    "type": "string"
                },
                "tx_hash": {
                    "type": "string"
                }
            }
        },
        "models.SukukHolding": {
            "type": "object",
            "properties": {
                "balance": {
                    "description": "Current token balance",
                    "type": "string"
                },
                "claimable_yield": {
                    "description": "Available yield to claim",
                    "type": "string"
                },
                "last_activity": {
                    "description": "Last purchase/redemption",
                    "type": "string"
                },
                "metadata": {
                    "description": "Sukuk details",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.SukukMetadata"
                        }
                    ]
                },
                "sukuk_address": {
                    "type": "string"
                },
                "total_yield_claimed": {
                    "description": "Total yield claimed historically",
                    "type": "string"
                },
                "unclaimed_distribution_ids": {
                    "description": "Distribution IDs available for claiming",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "yield_history": {
                    "description": "Recent yield distributions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.YieldDistribution"
                    }
                }
            }
        },
        "models.SukukMetadata": {
            "type": "object",
            "properties": {
                "block_number": {
                    "type": "integer"
                },
                "contract_address": {
                    "description": "Onchain Data",
                    "type": "string"
                },
                "created_at": {
                    "description": "Timestamps",
                    "type": "string"
                },
                "id": {
                    "description": "Primary Key",
                    "type": "integer"
                },
                "imbal_hasil": {
                    "description": "6.55% / Tahun",
                    "type": "string"
                },
                "jatuh_tempo": {
                    "description": "10 Jun 2030",
                    "type": "string"
                },
                "kuota_nasional": {
                    "description": "Rp7,000,000,000,000",
                    "type": "number"
                },
                "kupon_pertama": {
                    "description": "11 Agustus 2025",
                    "type": "string"
                },
                "logo_url": {
                    "description": "Logo link",
                    "type": "string"
                },
                "maksimum_pembelian": {
                    "description": "Rp10,000,000,000",
                    "type": "number"
                },
                "metadata_ready": {
                    "description": "Metadata Status",
                    "type": "boolean"
                },
                "minimum_pembelian": {
                    "description": "Rp1,000,000",
                    "type": "number"
                },
                "owner_address": {
                    "type": "string"
                },
                "penerimaan_kupon": {
                    "description": "Bulanan",
                    "type": "string"
                },
                "periode_pembelian": {
                    "description": "Ketentuan SR022-T5",
                    "type": "string"
                },
                "status": {
                    "description": "Berlangsung",
                    "type": "string"
                },
                "sukuk_code": {
                    "description": "Basic Info",
                    "type": "string"
                },
                "sukuk_deskripsi": {
                    "description": "Description",
                    "type": "string"
                },
                "sukuk_title": {
                    "description": "Sukuk Ritel",
                    "type": "string"
                },
                "tanggal_bayar_kupon": {
                    "description": "10 Setiap Bulan",
                    "type": "string"
                },
                "tenor": {
                    "description": "Main Features",
                    "type": "string"
                },
                "tipe_kupon": {
                    "description": "Fixed Rate",
                    "type": "string"
                },
                "token_id": {
                    "type": "integer"
                },
                "transaction_hash": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.SukukMetadataCreateRequest": {
            "type": "object",
            "required": [
                "contract_address",
                "owner_address",
                "sukuk_code",
                "token_id"
            ],
            "properties": {
                "block_number": {
                    "type": "integer"
                },
                "contract_address": {
                    "description": "Onchain Data",
                    "type": "string"
                },
                "imbal_hasil": {
                    "type": "string"
                },
                "jatuh_tempo": {
                    "type": "string"
                },
                "kuota_nasional": {
                    "type": "number"
                },
                "kupon_pertama": {
                    "type": "string"
                },
                "logo_url": {
                    "type": "string"
                },
                "maksimum_pembelian": {
                    "type": "number"
                },
                "minimum_pembelian": {
                    "type": "number"
                },
                "owner_address": {
                    "type": "string"
                },
                "penerimaan_kupon": {
                    "type": "string"
                },
                "periode_pembelian": {
                    "description": "Ketentuan",
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "sukuk_code": {
                    "description": "Basic Info",
                    "type": "string"
                },
                "sukuk_deskripsi": {
                    "type": "string"
                },
                "sukuk_title": {
                    "type": "string"
                },
                "tanggal_bayar_kupon": {
                    "type": "string"
                },
                "tenor": {
                    "description": "Main Features",
                    "type": "string"
                },
                "tipe_kupon": {
                    "type": "string"
                },
                "token_id": {
                    "type": "integer"
                },
                "transaction_hash": {
                    "type": "string"
                }
            }
        },
        "models.SukukMetadataListResponse": {
            "type": "object",
            "properties": {
                "available_distributions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SukukYieldDistribution"
                    }
                },
                "block_number": {
                    "type": "integer"
                },
                "contract_address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "imbal_hasil": {
                    "type": "string"
                },
                "jatuh_tempo": {
                    "type": "string"
                },
                "kuota_nasional": {
                    "type": "number"
                },
                "kupon_pertama": {
                    "type": "string"
                },
                "latest_activities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ActivityEvent"
                    }
                },
                "logo_url": {
                    "type": "string"
                },
                "maksimum_pembelian": {
                    "type": "number"
                },
                "metadata_ready": {
                    "type": "boolean"
                },
                "minimum_pembelian": {
                    "type": "number"
                },
                "owner_address": {
                    "type": "string"
                },
                "penerimaan_kupon": {
                    "type": "string"
                },
                "periode_pembelian": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "sukuk_code": {
                    "type": "string"
                },
                "sukuk_deskripsi": {
                    "type": "string"
                },
                "sukuk_title": {
                    "type": "string"
                },
                "tanggal_bayar_kupon": {
                    "type": "string"
                },
                "tenor": {
                    "type": "string"
                },
                "tipe_kupon": {
                    "type": "string"
                },
                "token_id": {
                    "type": "integer"
                },
                "transaction_hash": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.SukukMetadataResponse": {
            "type": "object",
            "properties": {
                "block_number": {
                    "type": "integer"
                },
                "contract_address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "imbal_hasil": {
                    "type": "string"
                },
                "jatuh_tempo": {
                    "type": "string"
                },
                "kuota_nasional": {
                    "type": "number"
                },
                "kupon_pertama": {
                    "type": "string"
                },
                "logo_url": {
                    "type": "string"
                },
                "maksimum_pembelian": {
                    "type": "number"
                },
                "metadata_ready": {
                    "type": "boolean"
                },
                "minimum_pembelian": {
                    "type": "number"
                },
                "owner_address": {
                    "type": "string"
                },
                "penerimaan_kupon": {
                    "type": "string"
                },
                "periode_pembelian": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "sukuk_code": {
                    "type": "string"
                },
                "sukuk_deskripsi": {
                    "type": "string"
                },
                "sukuk_title": {
                    "type": "string"
                },
                "tanggal_bayar_kupon": {
                    "type": "string"
                },
                "tenor": {
                    "type": "string"
                },
                "tipe_kupon": {
                    "type": "string"
                },
                "token_id": {
                    "type": "integer"
                },
                "transaction_hash": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.SukukMetadataUpdateRequest": {
            "type": "object",
            "properties": {
                "imbal_hasil": {
                    "type": "string"
                },
                "jatuh_tempo": {
                    "type": "string"
                },
                "kuota_nasional": {
                    "type": "number"
                },
                "kupon_pertama": {
                    "type": "string"
                },
                "logo_url": {
                    "type": "string"
                },
                "maksimum_pembelian": {
                    "type": "number"
                },
                "minimum_pembelian": {
                    "type": "number"
                },
                "penerimaan_kupon": {
                    "type": "string"
                },
                "periode_pembelian": {
                    "description": "Ketentuan",
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "sukuk_deskripsi": {
                    "type": "string"
                },
                "sukuk_title": {
                    "description": "Basic Info",
                    "type": "string"
                },
                "tanggal_bayar_kupon": {
                    "type": "string"
                },
                "tenor": {
                    "description": "Main Features",
                    "type": "string"
                },
                "tipe_kupon": {
                    "type": "string"
                }
            }
        },
        "models.SukukYieldDistribution": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "Total distributed amount",
                    "type": "string"
                },
                "claimable": {
                    "description": "Whether user can claim this distribution",
                    "type": "boolean"
                },
                "claimed_amount": {
                    "description": "Amount user has already claimed",
                    "type": "string"
                },
                "distribution_id": {
                    "type": "integer"
                },
                "payment_token": {
                    "description": "Token address (e.g., IDRX)",
                    "type": "string"
                },
                "user_claimable_amount": {
                    "description": "Amount user can claim based on holdings",
                    "type": "string"
                }
            }
        },
        "models.TransactionEvent": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "block_number": {
                    "type": "integer"
                },
                "details": {
                    "description": "Additional event-specific data",
                    "type": "object",
                    "additionalProperties": true
                },
                "status": {
                    "description": "\"pending\", \"confirmed\", \"failed\"",
                    "type": "string"
                },
                "sukuk_address": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "tx_hash": {
                    "type": "string"
                },
                "type": {
                    "description": "\"purchase\", \"redemption\", \"yield_claim\", \"yield_distribution\"",
                    "type": "string"
                }
            }
        },
        "models.TransactionHistoryResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "total_count": {
                    "type": "integer"
                },
                "transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TransactionEvent"
                    }
                }
            }
        },
        "models.YieldClaimDetail": {
            "type": "object",
            "properties": {
                "claimable_amount": {
                    "type": "string"
                },
                "distribution_count": {
                    "type": "integer"
                },
                "last_distribution": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/models.SukukMetadata"
                },
                "sukuk_address": {
                    "type": "string"
                },
                "unclaimed_distribution_ids": {
                    "description": "Distribution IDs available for claiming",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "user_balance": {
                    "type": "string"
                }
            }
        },
        "models.YieldClaimsResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "claims": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.YieldClaimDetail"
                    }
                },
                "total_amount": {
                    "description": "Total claimable across all sukuk",
                    "type": "string"
                },
                "total_claims": {
                    "type": "integer"
                }
            }
        },
        "models.YieldDistribution": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "block_number": {
                    "type": "integer"
                },
                "distribution_id": {
                    "description": "Required for claiming yields",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "sukuk_address": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "tx_hash": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "API key for accessing protected admin endpoints",
            "type": "apiKey",
            "name": "X-API-Key",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "backend-sukuk.kadzu.dev",
	BasePath:         "/api/v1",
	Schemes:          []string{"https", "http"},
	Title:            "Sukuk POC Backend API",
	Description:      "A Web3 backend for Sukuk (Islamic bonds) on Base Testnet, providing APIs for dApps and frontends while processing blockchain events from an indexer.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
