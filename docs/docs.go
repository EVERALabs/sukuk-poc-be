// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.sukuk-poc.com/support",
            "email": "support@sukuk-poc.com"
        },
        "license": {
            "name": "MIT",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/companies": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new partner company (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Create a new company",
                "parameters": [
                    {
                        "description": "Company data",
                        "name": "company",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.CreateCompanyRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Company created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/companies": {
            "get": {
                "description": "Get a list of all active companies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "List all companies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by industry sector",
                        "name": "sector",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of companies",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/companies/{id}": {
            "get": {
                "description": "Get details of a specific company including its Sukuk series",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Get company details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid company ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Company not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/companies/{id}/sukuks": {
            "get": {
                "description": "Get all Sukuk series for a specific company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Get company's Sukuk series",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of company's Sukuk series",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid company ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Get the health status of the API including database, system, and application metrics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "Service is healthy",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.HealthStatus"
                        }
                    },
                    "503": {
                        "description": "Service is unhealthy",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.HealthStatus"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "internal_handlers.ApplicationHealth": {
            "type": "object",
            "properties": {
                "companies_count": {
                    "type": "integer"
                },
                "sukuk_series_count": {
                    "type": "integer"
                },
                "uploads_directory_writable": {
                    "type": "boolean"
                }
            }
        },
        "internal_handlers.CheckResult": {
            "type": "object",
            "properties": {
                "duration_ms": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "internal_handlers.CreateCompanyRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "wallet_address"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "industry": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "wallet_address": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "internal_handlers.DatabaseHealth": {
            "type": "object",
            "properties": {
                "active_connections": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "response_time_ms": {
                    "$ref": "#/definitions/time.Duration"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "internal_handlers.HealthStatus": {
            "type": "object",
            "properties": {
                "application": {
                    "$ref": "#/definitions/internal_handlers.ApplicationHealth"
                },
                "checks": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/internal_handlers.CheckResult"
                    }
                },
                "database": {
                    "$ref": "#/definitions/internal_handlers.DatabaseHealth"
                },
                "service": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "system": {
                    "$ref": "#/definitions/internal_handlers.SystemHealth"
                },
                "timestamp": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "internal_handlers.MemoryStats": {
            "type": "object",
            "properties": {
                "allocated_mb": {
                    "type": "integer"
                },
                "gc_runs": {
                    "type": "integer"
                },
                "system_mb": {
                    "type": "integer"
                },
                "total_alloc_mb": {
                    "type": "integer"
                }
            }
        },
        "internal_handlers.SystemHealth": {
            "type": "object",
            "properties": {
                "cpu_cores": {
                    "type": "integer"
                },
                "goroutines": {
                    "type": "integer"
                },
                "memory": {
                    "$ref": "#/definitions/internal_handlers.MemoryStats"
                },
                "uptime": {
                    "type": "string"
                }
            }
        },
        "time.Duration": {
            "type": "integer",
            "format": "int64",
            "enum": [
                -9223372036854775808,
                9223372036854775807,
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000
            ],
            "x-enum-varnames": [
                "minDuration",
                "maxDuration",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour"
            ]
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "API key for accessing protected admin endpoints",
            "type": "apiKey",
            "name": "X-API-Key",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Sukuk POC Backend API",
	Description:      "A Web3 backend for Sukuk (Islamic bonds) on Base Testnet, providing APIs for dApps and frontends while processing blockchain events from an indexer.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
